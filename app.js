require("dotenv").config(),mongodbURL=process.env.MONGODB_URL;const express=require("express"),app=express(),bodyParser=require("body-parser");app.use(bodyParser.urlencoded({extended:!0}));const _=require("lodash"),mongoose=require("mongoose");app.set("view engine","ejs"),app.use(express.static("public"));var day=require(__dirname+"/date.js");day=day.getDate,mongoose.connect(mongodbURL);const itemsSchema={name:String},Item=mongoose.model("Item",itemsSchema),item1=new Item({name:"Welcome to your todolist!"}),item2=new Item({name:"Hit the + button to add a new item."}),item3=new Item({name:"<-- Hit this to delete an item."}),defaultItems=[item1,item2,item3],listSchema={name:String,items:[itemsSchema]},List=mongoose.model("List",listSchema);app.get("/",(function(e,t){Item.find({},(function(e,n){0===n.length?Item.insertMany(defaultItems,(function(e){e||t.redirect("/")})):t.render("list",{listTitle:day,newListItems:n})}))})),app.post("/",(function(e,t){const n=e.body.newItem,i=e.body.list,s=new Item({name:n});i===day?(s.save(),t.redirect("/")):List.findOne({name:i},(function(e,n){n.items.push(s),n.save(),t.redirect("/"+i)}))})),app.post("/delete",(function(e,t){const n=e.body.checkbox,i=e.body.list;i===day?Item.findByIdAndRemove(n,(function(e){e||t.redirect("/")})):List.findOneAndUpdate({name:i},{$pull:{items:{_id:n}}},(function(e,n){e||t.redirect("/"+i)}))})),app.get("/:customListName",(function(e,t){const n=_.capitalize(e.params.customListName);List.findOne({name:n},(function(e,i){if(!e)if(i)t.render("list",{listTitle:n,newListItems:i.items});else{new List({name:n,items:defaultItems}).save(),t.redirect("/"+n)}}))}));let port=process.env.PORT||3e3;app.listen(port,(function(){console.log("Server is running succesfully")}));